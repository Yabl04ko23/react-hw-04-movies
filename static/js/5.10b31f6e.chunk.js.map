{"version":3,"sources":["pages/MovieDetailsPage.js"],"names":["Cast","lazy","Reviews","MovieDetailsPage","state","filmes","handleGoback","props","location","history","from","push","routes","home","movieId","this","match","params","apiFetch","fetchGetInfoAboutFilm","then","response","setState","data","url","className","onClick","src","poster_path","alt","title","release_date","substr","vote_average","overview","genres","map","item","name","id","to","path","cast","component","reviews","Component"],"mappings":"sNAMMA,EAAOC,gBAAK,kBAAM,gCAClBC,EAAUD,gBAAK,kBAAM,gCAErBE,E,4MACJC,MAAQ,CACNC,OAAQ,M,EAYVC,aAAe,WAAO,IAAD,EACW,EAAKC,MAA3BC,EADW,EACXA,SAAUC,EADC,EACDA,QACdD,EAASJ,OAASI,EAASJ,MAAMM,KACnCD,EAAQE,KAAKH,EAASJ,MAAMM,MAG9BD,EAAQE,KAAKC,IAAOC,O,uDAftB,WAAqB,IAAD,OACVC,EAAYC,KAAKR,MAAMS,MAAMC,OAA7BH,QACRI,IAASC,sBAAsBL,GAASM,MAAK,SAACC,GAC5C,EAAKC,UAAS,WACZ,MAAO,CAAEjB,OAAQgB,EAASE,c,oBAchC,WAAU,IACAlB,EAAWU,KAAKX,MAAhBC,OACAmB,EAAQT,KAAKR,MAAMS,MAAnBQ,IAER,OACE,mCACGnB,GACC,qCACE,wBAAQoB,UAAU,YAAYC,QAASX,KAAKT,aAA5C,4BAGA,sBAAKmB,UAAU,WAAf,UACE,qBAAKE,IAAG,UATH,mCASG,OAAiBtB,EAAOuB,aAAeC,IAAKxB,EAAOyB,QAC3D,sBAAKL,UAAU,eAAf,UACE,+BACGpB,EAAOyB,MADV,KACmBzB,EAAO0B,aAAaC,OAAO,EAAG,GADjD,OAGA,gDAAyC,GAAtB3B,EAAO4B,aAA1B,OACA,0CACA,mBAAGR,UAAU,eAAb,SAA6BpB,EAAO6B,WACpC,wCACA,8BACG7B,EAAO8B,OAAOC,KAAI,SAACC,GAClB,OACE,uBAAMZ,UAAU,QAAhB,UACGY,EAAKC,KAAM,MADeD,EAAKE,eAQ5C,gCACE,2DACA,+BACE,6BACE,cAAC,IAAD,CAAMd,UAAU,cAAce,GAAE,UAAKhB,EAAL,SAAhC,oBAIF,6BACE,cAAC,IAAD,CAAMC,UAAU,cAAce,GAAE,UAAKhB,EAAL,YAAhC,0BAKJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOiB,KAAM7B,IAAO8B,KAAMC,UAAW3C,IACrC,cAAC,IAAD,CAAOyC,KAAM7B,IAAOgC,QAASD,UAAWzC,mB,GAvEzB2C,aAwFhB1C","file":"static/js/5.10b31f6e.chunk.js","sourcesContent":["import React, { Component, lazy } from \"react\";\r\nimport apiFetch from \"../services/api\";\r\nimport { Link, Route, Switch } from \"react-router-dom\";\r\nimport routes from \"../routes\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Cast = lazy(() => import(\"../components/Cast\"));\r\nconst Reviews = lazy(() => import(\"../components/Reviews\"));\r\n\r\nclass MovieDetailsPage extends Component {\r\n  state = {\r\n    filmes: null,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    apiFetch.fetchGetInfoAboutFilm(movieId).then((response) => {\r\n      this.setState(() => {\r\n        return { filmes: response.data };\r\n      });\r\n    });\r\n  }\r\n\r\n  handleGoback = () => {\r\n    const { location, history } = this.props;\r\n    if (location.state && location.state.from) {\r\n      history.push(location.state.from);\r\n      return;\r\n    }\r\n    history.push(routes.home);\r\n  };\r\n\r\n  render() {\r\n    const { filmes } = this.state;\r\n    const { url } = this.props.match;\r\n    const posterURL = `https://image.tmdb.org/t/p/w300`;\r\n    return (\r\n      <>\r\n        {filmes && (\r\n          <>\r\n            <button className=\"btnGoback\" onClick={this.handleGoback}>\r\n              &#8592; Go back\r\n            </button>\r\n            <div className=\"filmInfo\">\r\n              <img src={`${posterURL}${filmes.poster_path}`} alt={filmes.title} />\r\n              <div className=\"detailedInfo\">\r\n                <h2>\r\n                  {filmes.title} ({filmes.release_date.substr(0, 4)})\r\n                </h2>\r\n                <span>User score: {filmes.vote_average * 10}%</span>\r\n                <h3>Overview</h3>\r\n                <p className=\"filmOverview\">{filmes.overview}</p>\r\n                <h3>Genres</h3>\r\n                <div>\r\n                  {filmes.genres.map((item) => {\r\n                    return (\r\n                      <span className=\"genre\" key={item.id}>\r\n                        {item.name}{\" \"}\r\n                      </span>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <span>Additional information:</span>\r\n              <ul>\r\n                <li>\r\n                  <Link className=\"addInfoText\" to={`${url}/cast`}>\r\n                    Cast\r\n                  </Link>\r\n                </li>\r\n                <li>\r\n                  <Link className=\"addInfoText\" to={`${url}/reviews`}>\r\n                    Reviews\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n              <Switch>\r\n                <Route path={routes.cast} component={Cast} />\r\n                <Route path={routes.reviews} component={Reviews} />\r\n              </Switch>\r\n            </div>\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nMovieDetailsPage.propTypes = {\r\n  movieId: PropTypes.string,\r\n  url: PropTypes.string,\r\n  form: PropTypes.object,\r\n  history: PropTypes.object,\r\n};\r\n\r\nexport default MovieDetailsPage;\r\n"],"sourceRoot":""}