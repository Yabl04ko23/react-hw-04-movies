{"version":3,"sources":["components/Cast.js"],"names":["Cast","state","cast","componentDidMount","movieId","props","match","params","apiFetch","fetchCastInfo","then","response","setState","data","this","className","map","item","src","profile_path","alt","name","character","id","Component"],"mappings":"gMAIMA,E,4MACJC,MAAQ,CACNC,KAAM,I,EAGRC,kBAAoB,WAAO,IACjBC,EAAY,EAAKC,MAAMC,MAAMC,OAA7BH,QACRI,IAASC,cAAcL,GAASM,MAAK,SAACC,GACpC,EAAKC,UAAS,WACZ,MAAO,CAAEV,KAAMS,EAASE,KAAKX,a,4CAKnC,WAAU,IACAA,EAASY,KAAKb,MAAdC,KACR,OACE,mCACE,oBAAIa,UAAU,OAAd,SACGb,EAAKc,KAAI,SAACC,GACT,OACE,sBAAKF,UAAU,WAAf,UACE,qBAAKA,UAAU,UAAUG,IAAG,yCAAoCD,EAAKE,cAAgBC,IAAKH,EAAKI,OAC/F,6BAAKJ,EAAKI,OACV,6CAAgBJ,EAAKK,eAHQL,EAAKM,e,GArB/BC,aAsCJxB","file":"static/js/3.02b9ee36.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport apiFetch from \"../services/api\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Cast extends Component {\r\n  state = {\r\n    cast: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    const { movieId } = this.props.match.params;\r\n    apiFetch.fetchCastInfo(movieId).then((response) => {\r\n      this.setState(() => {\r\n        return { cast: response.data.cast };\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n    return (\r\n      <>\r\n        <ul className=\"cast\">\r\n          {cast.map((item) => {\r\n            return (\r\n              <div className=\"castItem\" key={item.id}>\r\n                <img className=\"castImg\" src={`https://image.tmdb.org/t/p/w300${item.profile_path}`} alt={item.name} />\r\n                <h3>{item.name}</h3>\r\n                <h3>Character: {item.character}</h3>\r\n              </div>\r\n            );\r\n          })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nCast.propTypes = {\r\n  movieId: PropTypes.string,\r\n};\r\n\r\nexport default Cast;\r\n"],"sourceRoot":""}