{"version":3,"sources":["routes.js","services/api.js","components/Navigation.js","pages/HomePage.js","App.js","index.js"],"names":["routes","home","movies","movieDetails","cast","reviews","baseURL","key","fetchFilmesOfHomePage","url","axios","get","fetchFilmesWithQuery","query","fetchGetInfoAboutFilm","movieId","fetchCastInfo","fetchReviewsInfo","Navigation","className","to","HomePage","state","filmes","componentDidMount","apiFetch","then","response","setState","data","results","this","map","item","id","original_title","Component","MovieDetailsPage","lazy","MoviesPage","App","exact","path","component","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"+HAOeA,IAPA,CACbC,KAAM,IACNC,OAAQ,UACRC,aAAc,mBACdC,KAAM,wBACNC,QAAS,6B,gCCLX,qBAEMC,EAAO,6BACPC,EAAG,mCA4BM,KAAEC,sBA1Ba,WAC5B,IAAIC,EAAG,UAAMH,EAAN,yCAA8CC,GACrD,OAAOG,IAAMC,IAAIF,IAwBqBG,qBArBX,SAACC,GAC5B,IAAIJ,EAAG,UAAMH,EAAN,mCAAwCC,EAAxC,kBAAqDM,GAC5D,OAAOH,IAAMC,IAAIF,IAmB2CK,sBAhBhC,SAACC,GAC7B,IAAIN,EAAG,UAAMH,EAAN,oBAAyBS,EAAzB,oBAA4CR,GACnD,OAAOG,IAAMC,IAAIF,IAckEO,cAX/D,SAACD,GACrB,IAAIN,EAAG,UAAMH,EAAN,oBAAyBS,EAAzB,4BAAoDR,GAC3D,OAAOG,IAAMC,IAAIF,IASiFQ,iBAN3E,SAACF,GACxB,IAAIN,EAAG,UAAMH,EAAN,oBAAyBS,EAAzB,4BAAoDR,GAC3D,OAAOG,IAAMC,IAAIF,M,yJCXJS,MAbf,WACE,OACE,mCACE,iCACE,gCACE,cAAC,IAAD,CAAMC,UAAU,UAAUC,GAAG,IAA7B,mBACA,cAAC,IAAD,CAAMD,UAAU,UAAUC,GAAG,UAA7B,4B,gDC6BKC,E,4MAjCbC,MAAQ,CACNC,OAAQ,I,EAGVC,kBAAoB,WAClBC,IAASjB,wBAAwBkB,MAAK,SAACC,GACrC,EAAKC,UAAS,WACZ,MAAO,CAAEL,OAAQI,EAASE,KAAKC,gB,4CAKrC,WAAU,IACAP,EAAWQ,KAAKT,MAAhBC,OACR,OACE,qCACE,gDACA,6BACGA,EAAOS,KAAI,SAACC,GACX,OACE,6BACE,cAAC,IAAD,CAAoBb,GAAE,kBAAaa,EAAKC,IAAxC,SACGD,EAAKE,gBADGF,EAAKC,KADTD,EAAKC,gB,GArBLE,aCGjBC,EAAmBC,gBAAK,kBAAM,gCAC9BC,EAAaD,gBAAK,kBAAM,gCAefE,MAbf,WACE,OACE,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM1C,IAAOC,KAAM0C,UAAWtB,IAC3C,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAM1C,IAAOE,OAAQyC,UAAWJ,IAC7C,cAAC,IAAD,CAAOG,KAAM1C,IAAOG,aAAcwC,UAAWN,WCXrDO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,WAAD,CAAUC,SAAU,6CAApB,SACE,cAAC,EAAD,UAINC,SAASC,eAAe,W","file":"static/js/main.3b7cdd81.chunk.js","sourcesContent":["const routes = {\r\n  home: \"/\",\r\n  movies: \"/movies\",\r\n  movieDetails: \"/movies/:movieId\",\r\n  cast: \"/movies/:movieId/cast\",\r\n  reviews: \"/movies/:movieId/reviews\",\r\n};\r\nexport default routes;\r\n","import axios from \"axios\";\r\n\r\nconst baseURL = `https://api.themoviedb.org`;\r\nconst key = `621bc2ed45fa45e70bd11c99e4fa5812`;\r\n\r\nconst fetchFilmesOfHomePage = () => {\r\n  let url = `${baseURL}/3/trending/movie/day?api_key=${key}`;\r\n  return axios.get(url);\r\n};\r\n\r\nconst fetchFilmesWithQuery = (query) => {\r\n  let url = `${baseURL}/3/search/movie?api_key=${key}&query=${query}`;\r\n  return axios.get(url);\r\n};\r\n\r\nconst fetchGetInfoAboutFilm = (movieId) => {\r\n  let url = `${baseURL}/3/movie/${movieId}?api_key=${key}`;\r\n  return axios.get(url);\r\n};\r\n\r\nconst fetchCastInfo = (movieId) => {\r\n  let url = `${baseURL}/3/movie/${movieId}/credits?api_key=${key}`;\r\n  return axios.get(url);\r\n};\r\n\r\nconst fetchReviewsInfo = (movieId) => {\r\n  let url = `${baseURL}/3/movie/${movieId}/reviews?api_key=${key}`;\r\n  return axios.get(url);\r\n};\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { fetchFilmesOfHomePage, fetchFilmesWithQuery, fetchGetInfoAboutFilm, fetchCastInfo, fetchReviewsInfo };\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Navigation() {\r\n  return (\r\n    <>\r\n      <header>\r\n        <div>\r\n          <Link className=\"navText\" to=\"/\">Home </Link>\r\n          <Link className=\"navText\" to=\"/movies\">Movies</Link>\r\n        </div>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React, { Component } from \"react\";\r\nimport apiFetch from \"../services/api\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass HomePage extends Component {\r\n  state = {\r\n    filmes: [],\r\n  };\r\n\r\n  componentDidMount = () => {\r\n    apiFetch.fetchFilmesOfHomePage().then((response) => {\r\n      this.setState(() => {\r\n        return { filmes: response.data.results };\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { filmes } = this.state;\r\n    return (\r\n      <>\r\n        <h1>Trending today</h1>\r\n        <ul>\r\n          {filmes.map((item) => {\r\n            return (\r\n              <li key={item.id}>\r\n                <Link key={item.id} to={`/movies/${item.id}`}>\r\n                  {item.original_title}\r\n                </Link>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import \"./App.css\";\nimport React, { lazy } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Navigation from \"./components/Navigation\";\nimport routes from \"./routes\";\nimport HomePage from \"./pages/HomePage\";\n\nconst MovieDetailsPage = lazy(() => import(\"./pages/MovieDetailsPage\"));\nconst MoviesPage = lazy(() => import(\"./pages/MoviesPage\"));\n\nfunction App() {\n  return (\n    <>\n      <Navigation />\n      <Switch>\n        <Route exact path={routes.home} component={HomePage} />\n        <Route exact path={routes.movies} component={MoviesPage} />\n        <Route path={routes.movieDetails} component={MovieDetailsPage} />\n      </Switch>\n    </>\n  );\n}\n\nexport default App;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Suspense fallback={<div>Loading...</div>}>\n        <App />\n      </Suspense>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}