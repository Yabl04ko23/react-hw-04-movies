{"version":3,"sources":["components/Reviews.js"],"names":["Reviews","state","reviews","movieId","this","props","match","params","apiFetch","fetchReviewsInfo","then","response","setState","data","results","length","map","item","className","author","content","id","Component"],"mappings":"gMAIMA,E,4MACJC,MAAQ,CACNC,QAAS,I,uDAEX,WAAqB,IAAD,OACVC,EAAYC,KAAKC,MAAMC,MAAMC,OAA7BJ,QACRK,IAASC,iBAAiBN,GAASO,MAAK,SAACC,GACvC,EAAKC,UAAS,WACZ,MAAO,CAAEV,QAASS,EAASE,KAAKC,iB,oBAKtC,WAAU,IACAZ,EAAYE,KAAKH,MAAjBC,QACR,OACE,mCACGA,EAAQa,OAAS,EAChB,6BACGb,EAAQc,KAAI,SAACC,GACZ,OACE,sBAAKC,UAAU,aAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BD,EAAKE,SACnC,+BAAOF,EAAKG,YAFmBH,EAAKI,SAQ5C,iF,GA7BYC,aAwCPtB","file":"static/js/4.f771c026.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport apiFetch from \"../services/api\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Reviews extends Component {\r\n  state = {\r\n    reviews: [],\r\n  };\r\n  componentDidMount() {\r\n    const { movieId } = this.props.match.params;\r\n    apiFetch.fetchReviewsInfo(movieId).then((response) => {\r\n      this.setState(() => {\r\n        return { reviews: response.data.results };\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { reviews } = this.state;\r\n    return (\r\n      <>\r\n        {reviews.length > 0 ? (\r\n          <ul>\r\n            {reviews.map((item) => {\r\n              return (\r\n                <div className=\"reviewItem\" key={item.id}>\r\n                  <li className=\"reviewAuthor\">{item.author}</li>\r\n                  <span>{item.content}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n          <h3>We don't have any reviews for this movie.</h3>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nReviews.propTypes = {\r\n  movieId: PropTypes.string,\r\n};\r\n\r\nexport default Reviews;\r\n"],"sourceRoot":""}